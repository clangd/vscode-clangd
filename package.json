{
    "name": "vscode-clangd",
    "displayName": "clangd",
    "description": "C and C++ completion, navigation, and insights",
    "version": "0.0.23",
    "publisher": "llvm-vs-code-extensions",
    "homepage": "https://clangd.llvm.org/",
    "icon": "icon.png",
    "engines": {
        "vscode": "^1.41.0"
    },
    "categories": [
        "Programming Languages",
        "Linters",
        "Formatters"
    ],
    "keywords": [
        "C",
        "C++",
        "clang",
        "clangd",
        "LLVM"
    ],
    "activationEvents": [
        "onLanguage:c",
        "onLanguage:cpp",
        "onLanguage:cuda",
        "onLanguage:objective-c",
        "onLanguage:objective-cpp",
        "onCommand:clangd.activate"
    ],
    "main": "./out/src/extension",
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "compile": "tsc -watch -p ./",
        "format": "clang-format -i --glob=\"{src,test}/*.ts\"",
        "test": "tsc -p ./ && node ./out/test/index.js",
        "package": "vsce package --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/",
        "publish": "vsce publish --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/",
        "git-clang-format": "git-clang-format"
    },
    "dependencies": {
        "jsonc-parser": "^2.1.0",
        "vscode-languageclient": "6.1.0",
        "vscode-languageserver-types": "^3.15.1"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^7.0.2",
        "@types/node": "^6.0.40",
        "@types/vscode": "1.41.*",
        "clang-format": "1.4.0",
        "glob": "^7.1.4",
        "mocha": "^7.1.0",
        "typescript": "^3.8.3",
        "vsce": "^1.75.0",
        "vscode-test": "^1.3.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/clangd/vscode-clangd.git"
    },
    "qna": "marketplace",
    "contributes": {
        "languages": [
            {
                "id": "cpp",
                "filenamePatterns": [
                    "**/include/c++/**",
                    "**/MSVC/*/include/**"
                ],
                "firstLine": "^/[/*].*-\\*-\\s*C\\+\\+\\s*-\\*-.*"
            },
            {
                "id": "cuda",
                "extensions": [
                    ".cu",
                    ".cuh"
                ]
            }
        ],
        "configuration": {
            "type": "object",
            "title": "clangd",
            "properties": {
                "clangd.path": {
                    "type": "string",
                    "default": "clangd",
                    "description": "The path to clangd executable, e.g.: /usr/bin/clangd."
                },
                "clangd.arguments": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "description": "Arguments for clangd server."
                },
                "clangd.trace": {
                    "type": "string",
                    "description": "Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format."
                },
                "clangd.semanticHighlighting": {
                    "type": "boolean",
                    "default": "true",
                    "description": "Enable semantic highlighting in clangd."
                },
                "clangd.fallbackFlags": {
                    "type": "array",
                    "default": [],
                    "items": { "type": "string" },
                    "description": "Extra clang flags used to parse files when no compilation database is found."
                }
            }
        },
        "commands": [
            {
                "command": "clangd.switchheadersource",
                "title": "Switch between Source/Header"
            },
            {
                "command": "clangd.activate",
                "title": "Manually activate clangd extension"
            }
        ],
        "keybindings": [
            {
                "command": "clangd.switchheadersource",
                "key": "Alt+o",
                "mac": "Alt+cmd+o",
                "when": "editorTextFocus"
            }
        ]
    }
}
